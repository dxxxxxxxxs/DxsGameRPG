{"version":3,"sources":["assets/Scripts/Framework/Bundle/BundleManager.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhF,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAA;IA2EA,CAAC;IA/DG;;;;OAIG;IACiB,wBAAU,GAA9B,UAA+B,UAAiB;uCAAE,OAAO;;;gBAErD,sBAAO,IAAI,OAAO,CAAyB,UAAC,QAAQ;wBAChD,IAAG,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EACjC;4BACI,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;4BACzC,OAAO;yBACV;wBACD,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,EAAC,UAAC,GAAS,EAAC,MAA6B;4BAC1E,IAAG,GAAG,EACN;gCACI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gCACnB,QAAQ,CAAC,IAAI,CAAC,CAAC;6BAClB;iCAED;gCACI,OAAO,CAAC,GAAG,CAAC,MAAM,GAAC,UAAU,GAAC,IAAI,CAAC,CAAC;gCACpC,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,EAAC,MAAM,CAAC,CAAC;gCACtC,QAAQ,CAAC,MAAM,CAAC,CAAC;6BACpB;wBACL,CAAC,CAAC,CAAA;oBACN,CAAC,CAAC,EAAA;;;KAEL;IACD;;;;;OAKG;IACiB,kBAAI,GAAxB,UAA6C,UAAiB,EAAC,UAAiB;uCAAE,OAAO;;;gBAErF,sBAAO,IAAI,OAAO,CAAI,UAAM,QAAQ;;;;wCACrB,qBAAM,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAA;;oCAAxC,MAAM,GAAC,SAAiC;oCAC5C,6CAA6C;oCAC7C,IAAG,MAAM,EACT;wCACI,MAAM,CAAC,IAAI,CAAC,UAAU,EAAC,UAAC,GAAG,EAAC,MAAQ;4CAChC,IAAG,GAAG,EACN;gDACI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gDACnB,QAAQ,CAAC,IAAI,CAAC,CAAC;6CAClB;iDAED;gDACI,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gDACvB,QAAQ,CAAC,MAAM,CAAC,CAAC;6CACpB;wCACL,CAAC,CAAC,CAAA;qCACL;yCAED;wCACI,OAAO,CAAC,GAAG,CAAC,cAAc,GAAC,UAAU,CAAC,CAAC;qCAC1C;;;;yBACJ,CAAC,EAAA;;;KAGL;IAzED,0CAA0C;IAC1C,+BAA+B;IAC/B,IAAI;IACJ,+BAA+B;IAC/B,QAAQ;IACR,8CAA8C;IAC9C,QAAQ;IACR,8CAA8C;IAC9C,IAAI;IACJ,0BAA0B;IACZ,uBAAS,GAAoC,IAAI,GAAG,EAAiC,CAAC;IAXnF,aAAa;QADjC,OAAO;OACa,aAAa,CA2EjC;IAAD,oBAAC;CA3ED,AA2EC,IAAA;kBA3EoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class BundleManager {\n    // private static _instance:BundleManager;\n    // public static get Instance()\n    // {\n    //     if(this._instance==null)\n    //     {\n    //         this._instance=new BundleManager();\n    //     }\n    //     return this._instance as BundleManager;\n    // }\n    // private constructor(){}\n    public static bundleMap:Map<string,cc.AssetManager.Bundle>=new Map<string,cc.AssetManager.Bundle>();\n    /**\n     * 加载Bundle分包\n     * @param bundleName 分包名称\n     * @returns \n     */\n    public static async loadBundle(bundleName:string):Promise<cc.AssetManager.Bundle>\n    {\n        return new Promise<cc.AssetManager.Bundle>((resovlve)=>{\n            if(this.bundleMap.get(bundleName))\n            {\n                resovlve(this.bundleMap.get(bundleName));\n                return;\n            }\n            cc.assetManager.loadBundle(bundleName,(err:Error,bundle:cc.AssetManager.Bundle)=>{\n                if(err)\n                {\n                    console.error(err);\n                    resovlve(null);\n                }\n                else\n                {\n                    console.log(\"加载分包\"+bundleName+\"成功\");\n                    this.bundleMap.set(bundleName,bundle);\n                    resovlve(bundle);\n                }\n            })\n        })\n            \n    }\n    /**\n     * 根据分包加载资源\n     * @param bundlePath 资源基于分包的相对路径\n     * @param bundleName 分包名称\n     * @returns \n     */\n    public static async load<T extends cc.Asset>(bundlePath:string,bundleName:string):Promise<T>\n    {   \n        return new Promise<T>(async(resovlve)=>{\n            let bundle=await this.loadBundle(bundleName);\n            //let bundle =this.bundleMap.get(bundleName);\n            if(bundle)\n            {\n                bundle.load(bundlePath,(err,result:T)=>{\n                    if(err)\n                    {\n                        console.error(err);\n                        resovlve(null);\n                    }\n                    else\n                    {\n                        console.log(\"加载预制体成功\");\n                        resovlve(result);\n                    }\n                })\n            }   \n            else\n            {\n                console.log(\"没有这个bundle分包\"+bundleName);\n            }\n        })\n        \n        \n    }\n}\n"]}