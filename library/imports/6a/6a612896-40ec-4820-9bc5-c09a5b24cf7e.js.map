{"version":3,"sources":["assets/Scripts/Framework/Pool/SubPool.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;AAKhF,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAKI,iBAAY,MAAgB,EAAC,MAAc;QAHnC,cAAS,GAAW,EAAE,CAAC;QACvB,aAAQ,GAAW,IAAI,CAAC;QACxB,aAAQ,GAAS,IAAI,CAAC;QAG1B,IAAI,CAAC,QAAQ,GAAC,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAC,MAAM,CAAC;IACzB,CAAC;IARD,sBAAW,6BAAQ;aAAnB,cAAuB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA,CAAC;;;OAAA;IASlD,sBAAI,GAAJ;QAEI,kFAAkF;IACtF,CAAC;IACM,uBAAK,GAAZ;QAEI,IAAI,EAAE,GAAS,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,IAAI;YACxB,IAAG,CAAC,IAAI,CAAC,MAAM,EACf;gBACI,EAAE,GAAC,IAAI,CAAC;aACX;QACL,CAAC,CAAC,CAAA;QACF,IAAG,EAAE,IAAE,IAAI,EACX;YACI,EAAE,GAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC3B;QACD,EAAE,CAAC,MAAM,GAAC,IAAI,CAAC;QACf,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACnB,OAAO,EAAE,CAAC;IACd,CAAC;IACM,yBAAO,GAAd,UAAe,IAAY;QAEvB,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EACtB;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;SACrB;IACL,CAAC;IACM,4BAAU,GAAjB;QAAA,iBAQC;QANG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,IAAI;YACxB,IAAG,IAAI,CAAC,MAAM,EACd;gBACI,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACtB;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IACM,0BAAQ,GAAf,UAAgB,IAAY;QAExB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IArDgB,OAAO;QAD3B,OAAO;OACa,OAAO,CAsD3B;IAAD,cAAC;CAtDD,AAsDC,IAAA;kBAtDoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport BundleManager from \"../Bundle/BundleManager\";\nimport IResultAble from \"./IResultAble\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class SubPool {\n    public get poolName(){ return this.myPrefab.name;}\n    private nodeArray:cc.Node[]=[];\n    private myPrefab:cc.Prefab=null;\n    private myParent:cc.Node=null;\n    constructor(prefab:cc.Prefab,parent:cc.Node)\n    {\n        this.myPrefab=prefab;\n        this.myParent=parent;\n    }\n    init()\n    {\n        //this.myPrefab = await BundleManager.load<cc.Prefab>(this.poolName,\"ObjectPool\");\n    }\n    public Spawn():cc.Node\n    {\n        let go:cc.Node=null;\n        this.nodeArray.forEach((node)=>{\n            if(!node.active)\n            {\n                go=node;\n            }\n        })\n        if(go==null)\n        {\n            go=cc.instantiate(this.myPrefab);\n            go.setParent(this.myParent);\n            this.nodeArray.push(go);\n        }\n        go.active=true;\n        go.emit(\"OnSpawn\");\n        return go;\n    }\n    public UnSpawn(node:cc.Node)\n    {\n        if(this.Contains(node))\n        {\n            node.emit(\"UnSpawn\");\n            node.active=false;\n        }\n    }\n    public UnSpawnAll()\n    {\n        this.nodeArray.forEach((node)=>{\n            if(node.active)\n            {\n                this.UnSpawn(node);\n            }\n        })\n    }\n    public Contains(node:cc.Node):boolean\n    {\n        return this.nodeArray.indexOf(node)>-1;\n    }\n}\n"]}