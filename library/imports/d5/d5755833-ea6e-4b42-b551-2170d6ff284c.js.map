{"version":3,"sources":["assets/Common/Pool/SubPool.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;AAKhF,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAKI,iBAAY,MAAiB,EAAE,MAAe;QAHtC,cAAS,GAAc,EAAE,CAAC;QAC1B,aAAQ,GAAc,IAAI,CAAC;QAC3B,aAAQ,GAAY,IAAI,CAAC;QAE7B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;IAC3B,CAAC;IAPD,sBAAW,6BAAQ;aAAnB,cAAwB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAQpD,sBAAI,GAAJ;QACI,kFAAkF;IACtF,CAAC;IACM,uBAAK,GAAZ;QAAA,iBAgBC;QAfG,IAAI,EAAE,GAAY,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,IAAI;YACvB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACd,EAAE,GAAG,IAAI,CAAC;gBACV,EAAE,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;aAC/B;QACL,CAAC,CAAC,CAAA;QACF,IAAI,EAAE,IAAI,IAAI,EAAE;YACZ,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC3B;QACD,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;QACjB,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACnB,OAAO,EAAE,CAAC;IACd,CAAC;IACM,yBAAO,GAAd,UAAe,IAAa;QACxB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACrB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACvB;IACL,CAAC;IACM,4BAAU,GAAjB;QAAA,iBAMC;QALG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,IAAI;YACxB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACtB;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IACM,0BAAQ,GAAf,UAAgB,IAAa;QACzB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAAC;IA5CgB,OAAO;QAD3B,OAAO;OACa,OAAO,CA6C3B;IAAD,cAAC;CA7CD,AA6CC,IAAA;kBA7CoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport BundleManager from \"../Bundle/BundleManager\";\nimport IResultAble from \"./IResultAble\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class SubPool {\n    public get poolName() { return this.myPrefab.name; }\n    private nodeArray: cc.Node[] = [];\n    private myPrefab: cc.Prefab = null;\n    private myParent: cc.Node = null;\n    constructor(prefab: cc.Prefab, parent: cc.Node) {\n        this.myPrefab = prefab;\n        this.myParent = parent;\n    }\n    init() {\n        //this.myPrefab = await BundleManager.load<cc.Prefab>(this.poolName,\"ObjectPool\");\n    }\n    public Spawn(): cc.Node {\n        let go: cc.Node = null;\n        this.nodeArray.forEach(node => {\n            if (!node.active) {\n                go = node;\n                go.setParent(this.myParent);\n            }\n        })\n        if (go == null) {\n            go = cc.instantiate(this.myPrefab);\n            go.setParent(this.myParent);\n            this.nodeArray.push(go);\n        }\n        go.active = true;\n        go.emit(\"OnSpawn\");\n        return go;\n    }\n    public UnSpawn(node: cc.Node) {\n        if (this.Contains(node)) {\n            node.emit(\"UnSpawn\");\n            node.active = false;\n        }\n    }\n    public UnSpawnAll() {\n        this.nodeArray.forEach((node) => {\n            if (node.active) {\n                this.UnSpawn(node);\n            }\n        })\n    }\n    public Contains(node: cc.Node): boolean {\n        return this.nodeArray.indexOf(node) > -1;\n    }\n}\n"]}